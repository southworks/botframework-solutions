steps:
  - task: Npm@1
    displayName: 'Build: Run npm install'
    inputs:
      workingDir: 'templates/typescript/samples/functionalTests/$(BotName)'
      verbose: false

  - task: Npm@1
    displayName: 'Build: Run npm build'
    inputs:
      command: custom
      workingDir: 'templates/typescript/samples/functionalTests/$(BotName)'
      verbose: false
      customCommand: 'run build'

  - task: Npm@1
    displayName: 'Build: Run npm test'
    inputs:
      command: custom
      workingDir: 'templates/typescript/samples/functionalTests/$(BotName)'
      verbose: false
      customCommand: 'run test'

  - task: Npm@1
    displayName: 'Build: Run npm test on unit tests with code coverage'
    inputs:
      command: custom
      workingDir: 'templates/typescript/samples/functionalTests/$(BotName)'
      verbose: false
      customCommand: 'run test-coverage-ci'

  - task: PublishTestResults@2
    displayName: 'Build: Publish Test Results'
    inputs:
      testResultsFiles: 'test-results.xml'
      searchFolder: 'templates/typescript/samples/functionalTests/$(BotName)'
      failTaskOnFailedTests: true

  - task: PublishCodeCoverageResults@1
    displayName: 'Build: Publish Code Coverage'
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: 'templates/typescript/samples/functionalTests/$(BotName)/coverage/cobertura-coverage.xml'
      reportDirectory: 'templates/typescript/samples/functionalTests/$(BotName)/coverage/'
